这题的思路完全想错了。
错误代码：
int secondHighest(char* s) {
    int num = strlen(s);
    int first = 0;
    int second = 0;
    char max = '0';
    char min = '0';
    int mybool = 0;
    for (int i = 0;i < num;i++) {
        if (s[i] >= '0' && s[i] <= '9' && mybool == 0) {
            if (s[i] >= max) {
                min = s[i];
                max = s[i];
                mybool = 1;
            }
        }
            if (s[i] >= '0' && s[i] <= '9' && mybool == 1) {
                if (s[i] > max) {
                    min = max;
                    max = s[i];
                }
            }
        
    }
    if (max == min)
        return -1;
    return min - 48;
}
如果这样写，那么先碰到大的数字，那么就会直接记录下大的数字，后面小的数字就不会再记录了。
同时，要注意使用strlen时要保证字符串以\0为结尾，不然就不能记录下真实的字符串大小。
比如，char s[3]={'1','2','3'};
strlen(s)不等于三！！！
自己想的正确解法：
int secondHighest(char* s) {
    int num = strlen(s);
    char max = '0';
    char min = '0';
    int sigh = 0; // 表示第一次遇到数字
    int a, b;     // a表示前，b表示后
    int re = -1;
    for (int i = 0; i < num; i++) {
        if (s[i] >= '0' && s[i] <= '9' && sigh == 0) { // 第一次遇到数字的处理
            a = i;
            b = i;
            sigh = 1; // 表示不是第一次遇到数字;
        }
        if (s[i] >= '0' && s[i] <= '9' &&
            sigh == 1) { // 不是第一次遇到数字的处理
            a = b;
            b = i;
            if (s[a] != s[b]) {
                re = 0; // 表示存在不同的数字;
                break;
            }
        }
    }
    if (re == -1)
        return -1;
    for (int i = 0; i < num; i++) {
        if (s[i] >= '0' && s[i] <= '9') {
            if (s[i] >= max) {
                max = s[i];
            }
        }
        for (int i = 0; i < num; i++) {
            if (s[i] >= '0' && s[i] <= '9') {
                if (s[i] < max && s[i] >= min) {
                    min = s[i];
                }
            }
        }
        
    }
    return min-48;
}
